{"version":3,"sources":["components/CreateContacts/CreateContacts.module.css","components/SearchContact/SearchContact.module.css","components/CreateContacts/CreateContacts.js","components/ListContacts/ListContacts.js","components/SearchContact/SearchContact.js","components/Phonebook/Phonebook.js","components/App/App.js","index.js","components/Phonebook/Phonebook.module.css","components/ListContacts/ListContacts.module.css"],"names":["module","exports","generateId","shortid","generate","CreateContacts","state","name","number","handleCreateContact","e","preventDefault","props","createContacts","id","setState","toastShow","handleChangeInput","target","value","this","className","styles","formCreate","onSubmit","htmlFor","type","placeholder","onChange","autoComplete","Component","ListContacts","contacts","onDelete","wrapperListContact","listContact","map","contact","key","contactItem","btnDelete","onClick","SearchContact","filteredContacts","searchInput","length","defaultProps","Phonebook","filter","text","typeToast","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","handleCreateContacts","some","c","trim","toLowerCase","s","handleDeleteContact","locatContacts","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","includes","filterContacts","box","searchContact","phonebook","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68957e3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCreate\":\"CreateContacts_formCreate__2qJMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"SearchContact_searchInput__2EqFJ\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './CreateContacts.module.css';\n\nconst generateId = () => shortid.generate();\n\nexport default class CreateContacts extends Component {\n  state = { name: '', number: '' };\n\n  static propTypes = {\n    createContacts: PropTypes.func.isRequired,\n    toastShow: PropTypes.func.isRequired,\n  };\n\n  handleCreateContact = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    if (name !== '' && number !== '') {\n      this.props.createContacts({\n        id: generateId(),\n        name,\n        number,\n      });\n      this.setState({ name: '', number: '' });\n    } else {\n      this.props.toastShow('⛔️ Вы не заполнили все поля!', 'error');\n    }\n  };\n\n  handleChangeInput = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form className={styles.formCreate} onSubmit={this.handleCreateContact}>\n          <label htmlFor={generateId()}>\n            Name\n            <input\n              type=\"text\"\n              placeholder=\"Enter name\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChangeInput}\n              autoComplete=\"off\"\n            />\n          </label>\n          <label htmlFor={generateId()}>\n            Phone\n            <input\n              type=\"number\"\n              placeholder=\"Enter phone\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChangeInput}\n              autoComplete=\"off\"\n            />\n          </label>\n          <button type=\"submit\">Create Contacts</button>\n        </form>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ListContacts.module.css';\n// import styled from 'styled-components';\n\nconst ListContacts = ({ contacts, onDelete }) => {\n  return (\n    <div className={styles.wrapperListContact}>\n      <ul className={styles.listContact}>\n        {contacts.map(contact => (\n          <li key={contact.id} className={styles.contactItem}>\n            <p>{contact.name}</p>\n            <p>{contact.number}</p>\n            <button\n              type=\"button\"\n              className={styles.btnDelete}\n              onClick={() => onDelete(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nListContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ListContacts;\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport ListContacts from '../ListContacts/ListContacts';\nimport styles from './SearchContact.module.css';\n\nconst generateId = () => shortid.generate();\n\nconst SearchContact = ({ value, onChange, filteredContacts, onDelete }) => {\n  return (\n    <>\n      <label className={styles.searchInput} htmlFor={generateId()}>\n        Find contacts by name\n        <input\n          type=\"text\"\n          placeholder=\"Enter name contact\"\n          name=\"filter\"\n          value={value}\n          onChange={onChange}\n          autoComplete=\"off\"\n        />\n      </label>\n      <h1>Result Search</h1>\n      {filteredContacts.length > 0 && (\n        <ListContacts contacts={filteredContacts} onDelete={onDelete} />\n      )}\n    </>\n  );\n};\n\nSearchContact.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  filteredContacts: PropTypes.arrayOf(PropTypes.shape({})),\n  onDelete: PropTypes.func.isRequired,\n};\n\nSearchContact.defaultProps = {\n  filteredContacts: [],\n};\nexport default SearchContact;\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from './Phonebook.module.css';\nimport CreateContacts from '../CreateContacts/CreateContacts';\nimport ListContacts from '../ListContacts/ListContacts';\nimport SearchContact from '../SearchContact/SearchContact';\n\nconst filterContacts = (contacts, filter) =>\n  contacts.filter(contact =>\n    contact.name\n      .trim()\n      .toLowerCase()\n      .includes(filter.trim().toLowerCase()),\n  );\nexport default class Phonebook extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const locatContacts = localStorage.getItem('contacts');\n    if (locatContacts) {\n      this.setState({\n        contacts: JSON.parse(locatContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  toastShow = (text, typeToast) => {\n    toast[typeToast](`${text}`, {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: false,\n      draggable: false,\n    });\n  };\n\n  handleChangeInput = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleCreateContacts = contact => {\n    const { contacts } = this.state;\n    const thisNewContact = contacts.some(\n      c => c.name.trim().toLowerCase() === contact.name.trim().toLowerCase(),\n    );\n    if (!thisNewContact) {\n      this.setState(s => ({\n        contacts: [...s.contacts, contact],\n      }));\n      this.toastShow('✅ Контакт Добавлен!', 'success');\n    } else {\n      this.toastShow('❌ Контакт с таким именем уже существует!', 'error');\n    }\n  };\n\n  handleDeleteContact = id => {\n    this.setState(s => ({\n      contacts: s.contacts.filter(contact => contact.id !== id),\n    }));\n    this.toastShow('✅ Контакт успешно удален!', 'success');\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <>\n        <div className={styles.createContacts}>\n          <h1>Create Contact</h1>\n          <CreateContacts\n            createContacts={this.handleCreateContacts}\n            toastShow={this.toastShow}\n          />\n        </div>\n        <div className={styles.box}>\n          <div className={styles.searchContact}>\n            <h1>Search Contact</h1>\n            {contacts.length > 0 && (\n              <SearchContact\n                value={filter}\n                onChange={this.handleChangeInput}\n                filteredContacts={filteredContacts}\n                onDelete={this.handleDeleteContact}\n              />\n            )}\n          </div>\n          <div className={styles.phonebook}>\n            <h1>All Contacts</h1>\n            {contacts.length > 0 && (\n              <ListContacts\n                contacts={contacts}\n                onDelete={this.handleDeleteContact}\n              />\n            )}\n          </div>\n        </div>\n        <ToastContainer />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport Phonebook from '../Phonebook/Phonebook';\n\nfunction App() {\n  return <Phonebook />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Phonebook_box__8rd5i\",\"searchContact\":\"Phonebook_searchContact__3JuG3\",\"phonebook\":\"Phonebook_phonebook__3Qzrx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperListContact\":\"ListContacts_wrapperListContact__1EolT\",\"listContact\":\"ListContacts_listContact__3FunH\",\"contactItem\":\"ListContacts_contactItem__15rHN\"};"],"sourceRoot":""}